(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{194:function(v,e,_){"use strict";_.r(e);var o=_(0),t=Object(o.a)({},(function(){var v=this,e=v.$createElement,_=v._self._c||e;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"自定义指令"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#自定义指令"}},[v._v("#")]),v._v(" 自定义指令")]),v._v(" "),_("h2",{attrs:{id:"钩子函数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#钩子函数"}},[v._v("#")]),v._v(" 钩子函数")]),v._v(" "),_("ul",[_("li",[_("p",[_("code",[v._v("bind")]),v._v("：只调用一次，指令第一次绑定到元素时调用。在这里可以进行一次性的初始化设置。")])]),v._v(" "),_("li",[_("p",[_("code",[v._v("inserted")]),v._v("：被绑定元素插入父节点时调用 (仅保证父节点存在，但不一定已被插入文档中)。")])]),v._v(" "),_("li",[_("p",[_("code",[v._v("update")]),v._v("：所在组件的 VNode 更新时调用，"),_("strong",[v._v("但是可能发生在其子 VNode 更新之前")]),v._v("。指令的值可能发生了改变，也可能没有。但是你可以通过比较更新前后的值来忽略不必要的模板更新 (详细的钩子函数参数见下)。")])]),v._v(" "),_("li",[_("p",[_("code",[v._v("componentUpdated")]),v._v("：指令所在组件的 VNode 及"),_("strong",[v._v("其子 VNode")]),v._v(" 全部更新后调用。")])]),v._v(" "),_("li",[_("p",[_("code",[v._v("unbind")]),v._v("：只调用一次，指令与元素解绑时调用。")])])]),v._v(" "),_("h2",{attrs:{id:"钩子函数参数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#钩子函数参数"}},[v._v("#")]),v._v(" 钩子函数参数")]),v._v(" "),_("p",[v._v("指令钩子函数会被传入以下参数：")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("el")]),v._v("：指令所绑定的元素，可以用来直接操作 DOM 。")]),v._v(" "),_("li",[_("code",[v._v("binding")]),v._v("：一个对象，包含以下属性：\n"),_("ul",[_("li",[_("code",[v._v("name")]),v._v("：指令名，不包括 "),_("code",[v._v("v-")]),v._v(" 前缀。")]),v._v(" "),_("li",[_("code",[v._v("value")]),v._v('：指令的绑定值，例如：v-my-directive="1 + 1" 中，绑定值为 2。')]),v._v(" "),_("li",[_("code",[v._v("oldValue")]),v._v("：指令绑定的前一个值，仅在 "),_("code",[v._v("update")]),v._v(" 和 "),_("code",[v._v("componentUpdated")]),v._v(" 钩子中可用。无论值是否改变都可用。")]),v._v(" "),_("li",[_("code",[v._v("expression")]),v._v('：字符串形式的指令表达式。例如 v-my-directive="1 + 1" 中，表达式为 "1 + 1"。')]),v._v(" "),_("li",[_("code",[v._v("arg")]),v._v('：传给指令的参数，可选。例如 v-my-directive:foo 中，参数为 "foo"。')]),v._v(" "),_("li",[_("code",[v._v("modifiers")]),v._v("：一个包含修饰符的对象。例如：v-my-directive.foo.bar 中，修饰符对象为 { foo: true, bar: true }。")])])]),v._v(" "),_("li",[_("code",[v._v("vnode")]),v._v("：Vue 编译生成的虚拟节点。")]),v._v(" "),_("li",[_("code",[v._v("oldVnode")]),v._v("：上一个虚拟节点，仅在 "),_("code",[v._v("update")]),v._v(" 和 "),_("code",[v._v("componentUpdated")]),v._v(" 钩子中可用。")])])])}),[],!1,null,null,null);e.default=t.exports}}]);