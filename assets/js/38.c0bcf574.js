(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{171:function(a,t,e){"use strict";e.r(t);var s=e(0),p=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"map-weakmap"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#map-weakmap"}},[a._v("#")]),a._v(" Map WeakMap")]),a._v(" "),e("p",[a._v("Map 对象保存键值对，并且能够记住键的原始插入顺序。任何值(对象或者原始值) 都可以作为一个键或一个值。")]),a._v(" "),e("p",[a._v("WeakMap 对象是一组键/值对的集合，其中的键是弱引用的。其键必须是对象，而值可以是任意的。")]),a._v(" "),e("h2",{attrs:{id:"objects-和-maps-的比较"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#objects-和-maps-的比较"}},[a._v("#")]),a._v(" Objects 和 maps 的比较")]),a._v(" "),e("ul",[e("li",[a._v("一个Object的键只能是字符串或者 Symbols，但一个 Map 的键可以是任意值，包括函数、对象、基本类型。")]),a._v(" "),e("li",[a._v("Map 中的键值是有序的，而添加到对象中的键则不是。因此，当对它进行遍历时，Map 对象是按插入的顺序返回键值。")]),a._v(" "),e("li",[a._v("你可以通过 size 属性直接获取一个 Map 的键值对个数，而 Object 的键值对个数只能手动计算。")]),a._v(" "),e("li",[a._v("Map 可直接进行迭代，而 Object 的迭代需要先获取它的键数组，然后再进行迭代。")]),a._v(" "),e("li",[a._v("Object 都有自己的原型，原型链上的键名有可能和你自己在对象上的设置的键名产生冲突。")]),a._v(" "),e("li",[a._v("Map 在涉及频繁增删键值对的场景下会有些性能优势。")])]),a._v(" "),e("h2",{attrs:{id:"weakmaps-和-maps-的比较"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#weakmaps-和-maps-的比较"}},[a._v("#")]),a._v(" weakmaps 和 maps 的比较")]),a._v(" "),e("ul",[e("li",[a._v("WeakMap 的 key 只能是 Object 类型。")]),a._v(" "),e("li",[a._v("WeakMap不能包含无引用的对象，否则会被自动清除出集合（垃圾回收机制）。")]),a._v(" "),e("li",[a._v("WeakSet对象是不可枚举的，无法获取大小。")])])])}),[],!1,null,null,null);t.default=p.exports}}]);