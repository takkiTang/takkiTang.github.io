(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{150:function(t,e,a){"use strict";a.r(e);var v=a(0),r=Object(v.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"dom-事件模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom-事件模型"}},[t._v("#")]),t._v(" DOM 事件模型")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/eventflow.png",alt:"'event'"}})]),t._v(" "),a("ol",[a("li",[a("p",[t._v("事件捕获阶段：为事件捕获提供机会；")])]),t._v(" "),a("li",[a("p",[t._v("处于目标阶段：事件的目标接收到事件（但并不会做出响应）；")])]),t._v(" "),a("li",[a("p",[t._v("事件冒泡阶段：事件响应阶段；")]),t._v(" "),a("p",[t._v("阻止事件冒泡（stopPropagation)")]),t._v(" "),a("p",[t._v("取消默认事件（preventDefault）")])])]),t._v(" "),a("h2",{attrs:{id:"事件委托"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件委托"}},[t._v("#")]),t._v(" 事件委托")]),t._v(" "),a("blockquote",[a("p",[t._v("会把一个或者一组元素的事件委托到它的父层或者更外层元素上，真正绑定事件的是外层元素，当事件响应到需要绑定的元素上时，会通过事件冒泡机制从而触发它的外层元素的绑定事件上，然后在外层元素上去执行函数。")])]),t._v(" "),a("ul",[a("li",[t._v("减少内存消耗")]),t._v(" "),a("li",[t._v("动态绑定事件")])])])}),[],!1,null,null,null);e.default=r.exports}}]);