(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{152:function(t,a,o){"use strict";o.r(a);var e=o(0),s=Object(e.a)({},(function(){var t=this,a=t.$createElement,o=t._self._c||a;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"持久化"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#持久化"}},[t._v("#")]),t._v(" 持久化")]),t._v(" "),o("h2",{attrs:{id:"cookie"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[t._v("#")]),t._v(" Cookie")]),t._v(" "),o("p",[t._v("Cookie 是小甜饼的意思。顾名思义，cookie 确实非常小，它的大小限制为 4KB 左右，是网景公司的前雇员 Lou Montulli 在 1993 年 3 月的发明。它的主要用途有保存登录信息，比如你登录某个网站市场可以看到“记住密码”，这通常就是通过在 Cookie 中存入一段辨别用户身份的数据来实现的。")]),t._v(" "),o("table",[o("thead",[o("tr",[o("th",[t._v("属性")]),t._v(" "),o("th",[t._v("作用")])])]),t._v(" "),o("tbody",[o("tr",[o("td",[t._v("value")]),t._v(" "),o("td",[t._v("如果用于保存用户登录态，应该将该值加密，不能使用明文的用户标识")])]),t._v(" "),o("tr",[o("td",[t._v("http-only")]),t._v(" "),o("td",[t._v("不能通过 JS 访问 Cookie，减少 XSS 攻击")])]),t._v(" "),o("tr",[o("td",[t._v("secure")]),t._v(" "),o("td",[t._v("只能在协议为 HTTPS 的请求中携带")])]),t._v(" "),o("tr",[o("td",[t._v("same-site")]),t._v(" "),o("td",[t._v("规定浏览器不能在跨域请求中携带 Cookie，减少 CSRF 攻击")])])])]),t._v(" "),o("h1",{attrs:{id:""}},[o("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")])]),t._v(" "),o("h2",{attrs:{id:"localstorage"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#localstorage"}},[t._v("#")]),t._v(" localStorage")]),t._v(" "),o("p",[t._v("localStorage 是 HTML5 标准中新加入的技术，它并不是什么划时代的新东西。早在 IE 6 时代，就有一个叫 userData 的东西用于本地存储，而当时考虑到浏览器兼容性，更通用的方案是使用 Flash。而如今，localStorage 被大多数浏览器所支持，如果你的网站需要支持 IE6+，那以 userData 作为你的 polyfill 的方案是种不错的选择。")]),t._v(" "),o("h2",{attrs:{id:"sessionstorage"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#sessionstorage"}},[t._v("#")]),t._v(" sessionStorage")]),t._v(" "),o("p",[t._v("sessionStorage 与 localStorage 的接口类似，但保存数据的生命周期与 localStorage 不同。做过后端开发的同学应该知道 Session 这个词的意思，直译过来是“会话”。而 sessionStorage 是一个前端的概念，它只是可以将一部分数据在当前会话中保存下来，刷新页面数据依旧存在。但当页面关闭后，sessionStorage 中的数据就会被清空。")]),t._v(" "),o("table",[o("thead",[o("tr",[o("th",[t._v("特性")]),t._v(" "),o("th",[t._v("Cookie")]),t._v(" "),o("th",[t._v("localStorage")]),t._v(" "),o("th",[t._v("sessionStorage")])])]),t._v(" "),o("tbody",[o("tr",[o("td",[t._v("数据的生命期")]),t._v(" "),o("td",[t._v("\n        一般由服务器生成，可设置失效时间。如果在浏览器端生成\n        Cookie，默认是关闭浏览器后失效\n      ")]),t._v(" "),o("td",[t._v("除非被清除，否则永久保存")]),t._v(" "),o("td",[t._v("仅在当前会话下有效，关闭页面或浏览器后被清除")])]),t._v(" "),o("tr",[o("td",[t._v("存放数据大小")]),t._v(" "),o("td",[t._v("4K 左右")]),t._v(" "),o("td",{attrs:{colspan:"2"}},[t._v("一般为 5MB")])]),t._v(" "),o("tr",[o("td",[t._v("与服务器端通信")]),t._v(" "),o("td",[t._v("\n        每次都会携带在 HTTP 头中，如果使用 cookie 保存过多数据会带来性能问题\n      ")]),t._v(" "),o("td",{attrs:{colspan:"2"}},[t._v("仅在客户端（即浏览器）中保存，不参与和服务器的通信")])])])])])}),[],!1,null,null,null);a.default=s.exports}}]);